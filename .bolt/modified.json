[["/home/project/.env.local","MONGODB_URI=mongodb+srv://your_username:your_password@your_cluster_url/sentimate?retryWrites=true&w=majority\nNEXTAUTH_SECRET=your_nextauth_secret"],["/home/project/components/AuthProvider.tsx","\"use client\"\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuth } from '@/lib/auth';\nimport { useRouter } from 'next/navigation';\n\nconst AuthContext = createContext(null);\n\nexport function AuthProvider({ children }) {\n  const auth = useAuth();\n  const router = useRouter();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (!auth.user) {\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          auth.setUser(JSON.parse(storedUser));\n          router.push('/dashboard');\n        }\n      } else {\n        router.push('/dashboard');\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [auth, router]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={{ ...auth, setUser: auth.setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuthContext = () => useContext(AuthContext);"]]